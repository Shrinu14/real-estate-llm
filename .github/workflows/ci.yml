name: CI/CD - Real Estate LangGraph App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test-push:
    runs-on: ubuntu-latest

    steps:
      - name: 🔄 Checkout Repository
        uses: actions/checkout@v3

      - name: 🛠️ Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🧰 Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: 📦 Build and Start Docker Compose Services
        run: |
          docker-compose -f docker-compose.yml up -d --build

      - name: 🩺 Wait for LangGraph App to be Healthy
        run: |
          echo "⏳ Waiting for langgraph_real_estate_app_v2 container to be healthy..."
          for i in {1..15}; do
            STATUS=$(docker inspect --format='{{.State.Health.Status}}' langgraph_real_estate_app_v2 2>/dev/null || echo "not_found")
            echo "Status: $STATUS"
            if [ "$STATUS" == "healthy" ]; then
              echo "✅ App is healthy."
              exit 0
            fi
            sleep 5
          done
          echo "❌ App failed to become healthy in time."
          docker-compose logs
          exit 1

      - name: ✅ Check API Endpoint is Reachable
        run: |
          echo "🌐 Checking API endpoint /health..."
          curl --fail http://localhost:8001/health || (docker-compose logs && exit 1)

      - name: 🧪 Run Tests (Optional)
        run: |
          echo "🧪 Running placeholder tests..."
          pip install -r requirements.txt
          # Uncomment if you add tests:
          # pytest tests/

      - name: 🔐 Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 📤 Build and Push Docker Image to DockerHub
        run: |
          IMAGE_NAME=${{ secrets.DOCKERHUB_USERNAME }}/real-estate-llm:latest
          echo "🚀 Building and pushing image: $IMAGE_NAME"
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME

      - name: 🧹 Cleanup - Stop and Remove Containers, Networks, Volumes
        if: always()
        run: |
          echo "🧹 Cleaning up docker resources..."
          docker-compose down --volumes --remove-orphans
